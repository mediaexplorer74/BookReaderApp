<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutThisApp.Label" xml:space="preserve">
    <value>情報</value>
  </data>
  <data name="AddLocalDirectory.Label" xml:space="preserve">
    <value>フォルダを追加</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Book Viewer</value>
  </data>
  <data name="BookmarkBasic.Title" xml:space="preserve">
    <value>栞</value>
  </data>
  <data name="BookmarkLastread.Title" xml:space="preserve">
    <value>[自動保存]</value>
  </data>
  <data name="Bookmarks.Label" xml:space="preserve">
    <value>栞</value>
  </data>
  <data name="BookmarkTitle.PlaceholderText" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="BookNext.Label" xml:space="preserve">
    <value>次の本へ</value>
  </data>
  <data name="BookPrevious.Label" xml:space="preserve">
    <value>前の本へ</value>
  </data>
  <data name="BookShelfTitleNew" xml:space="preserve">
    <value>本棚</value>
  </data>
  <data name="ClearAllBookShelf.Label" xml:space="preserve">
    <value>本棚を全て削除</value>
  </data>
  <data name="GoToBookShelf.Label" xml:space="preserve">
    <value>本棚を開く</value>
  </data>
  <data name="LoadingFolder.Completed.Message" xml:space="preserve">
    <value>読み込みが完了しました。</value>
  </data>
  <data name="LoadingFolder.Started.Message" xml:space="preserve">
    <value>フォルダの読み込みが完了するまで操作を継続できます。読み込みが完了し通知されるまでまでアプリを終了したりスリープ状態にしないでください。</value>
  </data>
  <data name="LoadingFolder.Title" xml:space="preserve">
    <value>フォルダ読み込み</value>
  </data>
  <data name="OpenLocalBook.Label" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="PageEnd.Label" xml:space="preserve">
    <value>最後</value>
  </data>
  <data name="PageLeft.Label" xml:space="preserve">
    <value>左</value>
  </data>
  <data name="PageLeftmost.Label" xml:space="preserve">
    <value>左端</value>
  </data>
  <data name="PageNext.Label" xml:space="preserve">
    <value>次</value>
  </data>
  <data name="PagePrevious.Label" xml:space="preserve">
    <value>前</value>
  </data>
  <data name="PageReverse.Label" xml:space="preserve">
    <value>ページ方向を転換</value>
  </data>
  <data name="PageRight.Label" xml:space="preserve">
    <value>右</value>
  </data>
  <data name="PageRightmost.Label" xml:space="preserve">
    <value>右端</value>
  </data>
  <data name="PageTop.Label" xml:space="preserve">
    <value>最初</value>
  </data>
  <data name="Setting.Label" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Setting_DefaultFullScreen.Description" xml:space="preserve">
    <value>ブックビュワーを開いた時、自動的に全画面モードに切り替えます。</value>
  </data>
  <data name="Setting_DefaultFullScreen.Title" xml:space="preserve">
    <value>標準で全画面表示にする</value>
  </data>
  <data name="Setting_DefaultPageReverse.Description" xml:space="preserve">
    <value>新たに開いた本を右綴じと認識する。</value>
  </data>
  <data name="Setting_DefaultPageReverse.Title" xml:space="preserve">
    <value>標準で右綴じにする</value>
  </data>
  <data name="Setting_SaveLastReadPage.Description" xml:space="preserve">
    <value>自動的に前回その本を読んだページを開きます。</value>
  </data>
  <data name="Setting_SaveLastReadPage.Title" xml:space="preserve">
    <value>前回読んだページを開く。</value>
  </data>
  <data name="Setting_ShowRightmostAndLeftmost.Description" xml:space="preserve">
    <value>ブックビュワーで右端/左端へ移動するボタンを表示する。</value>
  </data>
  <data name="Setting_ShowRightmostAndLeftmost.Title" xml:space="preserve">
    <value>右端/左端へのボタンを表示する</value>
  </data>
  <data name="Setting_SyncBookmarks.Description" xml:space="preserve">
    <value>クラウドを通じて栞を同期する。</value>
  </data>
  <data name="Setting_SyncBookmarks.Title" xml:space="preserve">
    <value>栞を同期する。</value>
  </data>
  <data name="ToggleFullScreen.Label" xml:space="preserve">
    <value>全画面モード切替</value>
  </data>
</root>